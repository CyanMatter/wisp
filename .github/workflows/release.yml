name: Build, Test, Deploy

on:
    push:
        branches:
        - 'main'

    workflow_dispatch:

permissions:
    contents: read
    pages: write
    id-token: write

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
    build:
        name: ⚡ Build
        runs-on: ubuntu-20.04
        
        steps:
        - name: ⏬ Checkout repo
          uses: actions/checkout@v3

        # ————————————————————————————————————————————————————————————————————————

        - name: 🗃️ Set up Rust Cache
          uses: actions/cache@v3
          with:
            path: |
                ~/.rustup/toolchains
                ~/.rustup/update-hashes
                ~/.rustup/settings.toml
            key: toolchain-${{ hashFiles('rust-toolchain') }}

        - name: 🗃️ Set up Cargo cache
          uses: actions/cache@v3
          with:
            path: |
                ~/.cargo/bin/
                ~/.cargo/registry/index/
                ~/.cargo/registry/cache/
                ~/.cargo/git/db/
                target/            
            key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            restore-keys: ${{ runner.os }}-cargo-

        # ————————————————————————————————————————————————————————————————————————

        - name: 🏗️ Set up Rust toolchain
          uses: actions-rs/toolchain@v1
          with:
            profile: minimal
            toolchain: stable

        - name: 🎯 Add WASM target
          run: rustup target add wasm32-unknown-unknown

        # ————————————————————————————————————————————————————————————————————————

        - name: 🔍 Check Trunk installation
          id: trunk_installed
          uses: andstor/file-existence-action@v3
          with:
            files: "/home/runner/.cargo/bin/trunk*"
        
        - name: 🏗️ Download and install Trunk binary
          if: steps.trunk_installed.outputs.files_exists == 'false'
          run: wget -qO- https://github.com/trunk-rs/trunk/releases/download/v0.18.8/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf-

      # ————————————————————————————————————————————————————————————————————————

        - name: 🏗️ Set up PNPM 7
          uses: pnpm/action-setup@v2.2.2
          with:
            version: 7.9.0
            run_install: false

        - name: 🔍 Get PNPM store directory
          id: pnpm-cache
          run: |
            echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

        - name: 🗃️ Set up PNPM cache
          uses: actions/cache@v3
          with:
            path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
            key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
            restore-keys: ${{ runner.os }}-pnpm-store-

        - name: 🏗️ Install Node dependencies
          run: pnpm install --no-frozen-lockfile

        # ————————————————————————————————————————————————————————————————————————

        - name: ⚡ Build
          run: ./trunk build --release --public-url "${GITHUB_REPOSITORY#*/}"

        - name: 🔩 Minify
          run: ./node_modules/.bin/esbuild ./dist/**/*.js --bundle --minify --outdir=./dist --allow-overwrite

        - name: 🌐 Upload artifact
          uses: actions/upload-pages-artifact@v1
          with:
            path: ./dist

    # ————————————————————————————————————————————————————————————————————————————

    test:
        name: 🔬 Test
        needs: build
        runs-on: ubuntu-20.04

        steps:
        - name: ⏬ Checkout repo
          uses: actions/checkout@v3
          with:
            ref: ${{ github.ref }}

        # ————————————————————————————————————————————————————————————————————————

        - name: 🔍 Check wasm-pack installation
          id: wasm_pack_installed
          uses: andstor/file-existence-action@v3
          with:
            files: "/home/runner/.cargo/bin/wasm-pack*"

        - name: 🏗️ Download and install wasm-pack binary
          if: steps.wasm_pack_installed.outputs.files_exists == 'false'
          run: wget -qO- https://github.com/rustwasm/wasm-pack/releases/download/v0.12.1/wasm-pack-v0.12.1-x86_64-unknown-linux-musl.tar.gz | tar -xzf-

        # ————————————————————————————————————————————————————————————————————————
        
        - name: 🏗️ Set up and cache Firefox
          uses: browser-actions/setup-firefox@v1
          with:
            firefox-version: '123.0.1'

        # ————————————————————————————————————————————————————————————————————————

        - name: 🧪 Run tests
          run: wasm-pack test --headless --firefox

    # ————————————————————————————————————————————————————————————————————————————

    deploy:
        name: 🚀 Deploy
        needs: build
        runs-on: ubuntu-20.04
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}

        steps:
            - name: 🚀 Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v1
