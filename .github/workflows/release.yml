name: Build & deploy

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # ————————————————————————————————————————————————————————————————————————

      - name: Set up Rust Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.rustup/toolchains
            ~/.rustup/update-hashes
            ~/.rustup/settings.toml
          key: toolchain-${{ hashFiles('rust-toolchain') }}

      - name: Set up Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      # ————————————————————————————————————————————————————————————————————————

      - name: Check rsw installation
        id: rsw_exists
        uses: andstor/file-existence-action@v3
        with:
          files: "/home/runner/.cargo/bin/rsw.*"

      - name: Install Rsw
        if: steps.rsw_exists.outputs.files_exists == 'false'
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: rsw
    
      # ————————————————————————————————————————————————————————————————————————

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      # ————————————————————————————————————————————————————————————————————————

      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: 'latest'

      # ————————————————————————————————————————————————————————————————————————

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # ————————————————————————————————————————————————————————————————————————

      - name: Set up PNPM 7
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.9.0
          run_install: false

      - name: Get PNPM store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: Set up PNPM cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Node dependencies
        run: pnpm install --prod --no-frozen-lockfile

      # ————————————————————————————————————————————————————————————————————————

      - name: Build app
        run: pnpm build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./web/dist
          
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-20.04
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
